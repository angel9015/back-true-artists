# frozen_string_literal: true

module Api
  module V1
    class MessagesController < ApplicationController
      skip_before_action :authenticate_request!
      before_action :conversation

      def create
        message = conversation.messages.new(message_params)
        if message.save
          render json: message.to_json, status: :created
        else
          render_api_error(status: 422, errors: message.errors)
        end
      end

      private

      def conversation
        conversation_service = ConversationService.new(conversation_params).call
        return conversation_service.payload if conversation_service.success?

        render_api_error(status: 422, errors: conversation_service.errors)
      end

      def message_params
        params.permit(
          :content,
          :receiver_id,
          :sender_id,
          :is_read,
          :message_type,
          :thread_id
        ).tap do |message|
          if params[:receiver_id].blank? || params[:sender_id].blank?
            message[:receiver_id] = conversation.receiver_id
            message[:sender_id] = conversation.sender_id
          end
        end
      end

      def conversation_params
        params.permit(
          :email,
          :full_name,
          :sender_id,
          :receiver_id,
          :recipient_type,
          :recipient_id,
          attachments: []
        ).tap do |conversation|
          conversation[:autogenerated] = true
        end
      end
    end
  end
end
